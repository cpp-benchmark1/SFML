name: "CodeQL"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: 'ubuntu-24.04'
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    strategy:
      fail-fast: false
      matrix:
        include:
        - language: c-cpp
          build-mode: manual
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
    - if: matrix.build-mode == 'manual'
      shell: bash
      run: |
        sudo apt-get update && sudo apt-get install -y \
          build-essential \
          cmake \
          git \
          pkg-config \
          libx11-dev \
          libxrandr-dev \
          libudev-dev \
          libgl1-mesa-dev \
          libflac-dev \
          libogg-dev \
          libvorbis-dev \
          libopenal-dev \
          libfreetype6-dev \
          libjpeg-dev \
          libpng-dev \
          libssl-dev \
          libmongoc-dev \
          libbson-dev \
          libmysqlclient-dev \
          libxcursor-dev \
          libxi-dev \
          libxinerama-dev \
          libxrender-dev \
          libxfixes-dev \
          libxext-dev \
          libcurl4-openssl-dev \
          gdb \
          valgrind

        cmake -B build \
          -DCMAKE_BUILD_TYPE=Debug \
          -DSFML_BUILD_SYSTEM=ON \
          -DSFML_BUILD_WINDOW=ON \
          -DSFML_BUILD_GRAPHICS=ON \
          -DSFML_BUILD_AUDIO=ON \
          -DSFML_BUILD_NETWORK=ON \
          -DSFML_BUILD_EXAMPLES=ON \
          -DSFML_BUILD_DOC=OFF \
          -DCMAKE_CXX_STANDARD=17 \
          -DCMAKE_CXX_STANDARD_REQUIRED=ON \
          -DBUILD_SHARED_LIBS=OFF \
          -DCMAKE_CXX_FLAGS="-fPIC -Wall -Wextra -Werror=return-type -Wno-unused-parameter" \
          -DCMAKE_C_FLAGS="-fPIC -Wall -Wextra" \
          && cmake --build build --config Debug -j$(nproc)

    - if: matrix.build-mode == 'manual'
      name: Free disk space
      run: |
          sudo docker rmi $(docker image ls -aq) >/dev/null 2>&1 || true
          sudo rm -rf \
            /usr/share/dotnet /usr/local/lib/android /opt/ghc \
            /usr/local/share/powershell /usr/share/swift /usr/local/.ghcup \
            /usr/lib/jvm || true
          sudo apt-get purge aria2 ansible azure-cli shellcheck rpm xorriso zsync \
            esl-erlang firefox gfortran-8 gfortran-9 google-chrome-stable \
            google-cloud-sdk imagemagick \
            libmagickcore-dev libmagickwand-dev libmagic-dev ant ant-optional kubectl \
            mercurial apt-transport-https mono-complete libmysqlclient \
            unixodbc-dev yarn chrpath libssl-dev libxft-dev \
            libfreetype6 libfreetype6-dev libfontconfig1 libfontconfig1-dev \
            snmp pollinate libpq-dev postgresql-client powershell ruby-full \
            sphinxsearch subversion mongodb-org azure-cli microsoft-edge-stable \
            -y -f || true
          sudo apt-get purge google-cloud-sdk -f -y  || true
          sudo apt-get purge '~n ^mysql' -f -y  || true
          sudo apt-get purge '~n ^php' -f -y  || true
          sudo apt-get purge '~n ^dotnet' -f -y  || true
          sudo apt-get autoremove -y || true
          sudo apt-get autoclean -y || true

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
